---
- name: Create data directory
  file:
      dest: "{{ base_dir }}/telegraf"
      state: "directory"

- name: Create config
  template:
      src: "{{ item }}.j2"
      dest: "{{ base_dir }}/telegraf/{{ item }}"
      owner: root
      mode: 0600
  with_items:
      - telegraf.conf
      - Dockerfile
  register: config_file

- name: Build image
  docker_image:
      path: "{{ base_dir }}/telegraf"
      name: telegraf
      tag: "{{ telegraf_version }}-custom"
  register: build_image

- name: Get hostname
  command: hostname
  register: hostname

- name: Set volumes
  set_fact:
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/sys:/rootfs/sys:ro"
      - "/proc:/rootfs/proc:ro"
      - "/etc:/rootfs/etc:ro"
      - "/var/run/utmp:/var/run/utmp:ro"
      - "{{ base_dir }}/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro"

- name: Append if fail2ban volumes
  set_fact:
    volumes: "{{ volumes  + ['/var/run/fail2ban/fail2ban.sock:/var/run/fail2ban/fail2ban.sock:ro'] }}"
  when: inventory_hostname in groups['telegraf-fail2ban']|default([])

- name: Start container
  docker_container:
      image: "telegraf:{{ telegraf_version }}-custom"
      name: telegraf
      recreate: "{{ 'yes' if build_image.changed or config_file.changed else 'no' }}"
      user: root
      hostname: "{{ hostname.stdout }}"
      restart_policy: always
      network_mode: host
      etc_hosts:
          influxdb: "{{ metric_server_ip }}"
      env:
          HOST_PROC: /rootfs/proc
          HOST_SYS: /rootfs/sys
          HOST_ETC: /rootfs/etc
      log_driver: json-file
      log_options:
          max-size: "1m"
          max-file: "1"
      volumes: "{{ volumes }}"
